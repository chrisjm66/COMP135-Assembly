Microsoft (R) Macro Assembler Version 6.15.8803		    04/30/24 16:01:12
Week 14 Labs						     Page 1 - 1


				TITLE Week 14 Labs
				; Author: Chris Mangan
				; Date: 4-30-2024

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
 00000000 000A 0014 001E		array1 WORD 10, 20, 30, 40, 50
	   0028 0032
 0000000A = 0000000A			rowSize = ($ - array1) ; where i am - array1 (row size)
 0000000A  003C 0046 0050				WORD 60, 70, 80, 90, 100
	   005A 0064
 00000014  006E 0078 0082				WORD 110, 120, 130, 140, 150
	   008C 0096
 0000001E 7F 03 09 0C 12		array2 BYTE 127, 3, 9, 12, 18, 26, 9, 15
	   1A 09 0F
 00000026 57 68 61 74 20		prompt1 BYTE "What row?",0
	   72 6F 77 3F 00
 00000030 57 68 61 74 20		prompt2 BYTE "What column?",0
	   63 6F 6C 75 6D
	   6E 3F 00
 0000003D 00				rownum BYTE ?
 0000003E 00				colnum BYTE ?
 0000003F 00				showme BYTE ?
					
 00000040 2C				comma BYTE ","
 00000041 20				space BYTE " "
 00000042 45 6E 74 65 72		prompt3 BYTE "Enter a name: ",0
	   20 61 20 6E 61
	   6D 65 3A 20 00
 00000051  00000028 [			nameArray BYTE 40 DUP(0)
	    00
	   ]
 00000079  00000028 [			firstName BYTE 40 DUP(0)
	    00
	   ]
 00000000			.code

 00000000			main PROC
 00000000  E8 000000B8			call nameSwap
					exit
 0000000C			main ENDP

				; lab 1
 0000000C			multiDArray PROC
 0000000C  BE 00000000 R		mov esi, OFFSET array1 ; base of row1
					
					; get row num
 00000011  BA 00000026 R		mov edx, offset prompt1
 00000016  E8 00000000 E		call writestring
 0000001B  E8 00000000 E		call crlf
 00000020  E8 00000000 E		call readint
 00000025  A2 0000003D R		mov rownum, al
					
					; get col num
 0000002A  BA 00000030 R		mov edx, offset prompt2
 0000002F  E8 00000000 E		call writestring
 00000034  E8 00000000 E		call crlf
 00000039  E8 00000000 E		call readint
 0000003E  A2 0000003E R		mov colnum, al
					
 00000043  BE 00000000 R		mov esi, offset array1
 00000048  B8 0000000A			mov eax, rowsize
 0000004D  F6 25 0000003D R		mul rowNum ; eax = rowsize * rownum
 00000053  03 F0			add esi, eax ; esi + current row
 00000055  B8 00000002			mov eax, TYPE array1 ; mov 2 into eax (WORD)
 0000005A  F6 25 0000003E R		mul colnum ; multiply by column num
					
 00000060  8B 1C 30			mov ebx, [esi + eax] ; add esi (current row) to eax (column)
 00000063  88 1D 0000003F R		mov showme, bl
 00000069  0F B7 05			movzx eax, WORD PTR [showme]
	   0000003F R
 00000070  E8 00000000 E		call writeint
 00000075  C3				ret
 00000076			multiDArray ENDP


				; lab 2
 00000076			pass PROC uses ecx
 00000077  B9 00000007			mov ecx, lengthof array2 - 1
 0000007C  B8 00000000			mov eax, 0
 00000081			tPass:
 00000081  0F B6 B0			movzx esi,  BYTE PTR array2[eax]
	   0000001E R
 00000088  0F B6 B8			movzx edi, BYTE PTR array2[eax+1]
	   0000001F R
 0000008F  A6				cmpsb ; compare ESI and EDI
 00000090  7E 05			jle next
 00000092  E8 00000005			call swap
 00000097			next:
 00000097  40				inc eax
 00000098  E2 E7			loop tPass
					ret
 0000009C			pass ENDP

 0000009C			swap PROC
 0000009C  8A 06			mov al, [esi]
 0000009E  8A 1F			mov bl, [edi]
 000000A0  88 1E			mov [esi], bl
 000000A2  88 07			mov [edi], al
 000000A4  C3				ret
 000000A5			swap ENDP

 000000A5			disp PROC uses ecx
 000000A6  B9 00000008			mov ecx, lengthof array2
 000000AB  BE 0000001E R		mov esi, offset array2
 000000B0			tDisp:
 000000B0  0F B6 06			movzx eax, BYTE PTR [esi]
 000000B3  E8 00000000 E		call writeint
 000000B8  46				inc esi
 000000B9  E2 F5			loop tDisp
					ret
 000000BD			disp ENDP

				; lab 3
 000000BD			nameSwap PROC
 000000BD  BA 00000042 R		mov edx, offset prompt3
 000000C2  E8 00000000 E		call writestring
 000000C7  BA 00000051 R		mov edx, offset nameArray
 000000CC  B9 00000028			mov ecx, lengthof nameArray
 000000D1  E8 00000000 E		call readstring
 000000D6  8B C8			mov ecx, eax ; how many entered?
 000000D8  8B D8			mov ebx, eax
 000000DA  BE 00000000			mov esi, 0
 000000DF			top:
 000000DF  8A 86 00000051 R		mov al, nameArray[esi]
 000000E5  3A 05 00000041 R		cmp al, space
 000000EB  74 09			je lastName
 000000ED  88 86 00000079 R		mov firstName[esi], al
 000000F3  46				inc esi
 000000F4  E2 E9			loop top
 000000F6			lastName:
					
 000000F6  49				dec ecx
 000000F7			top2:
 000000F7  46				inc esi ; skip the space
 000000F8  8A 86 00000051 R		mov al, nameArray[esi]
 000000FE  E8 00000000 E		call writeChar
 00000103  E2 F2			loop top2
 00000105			writeFirstName:
 00000105  A0 00000040 R		mov al, comma
 0000010A  E8 00000000 E		call writechar
 0000010F  A0 00000041 R		mov al, space
 00000114  E8 00000000 E		call writechar
					
 00000119  BA 00000079 R		mov edx, offset firstname
 0000011E  E8 00000000 E		call writeString
 00000123  C3				ret
 00000124			nameSwap ENDP
				END main
Microsoft (R) Macro Assembler Version 6.15.8803		    04/30/24 16:01:12
Week 14 Labs						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000A1 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000124 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
disp . . . . . . . . . . . . . .	P Near	 000000A5 _TEXT	Length= 00000018 Public STDCALL
  tDisp  . . . . . . . . . . . .	L Near	 000000B0 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000000C Public STDCALL
multiDArray  . . . . . . . . . .	P Near	 0000000C _TEXT	Length= 0000006A Public STDCALL
nameSwap . . . . . . . . . . . .	P Near	 000000BD _TEXT	Length= 00000067 Public STDCALL
  top  . . . . . . . . . . . . .	L Near	 000000DF _TEXT	
  lastName . . . . . . . . . . .	L Near	 000000F6 _TEXT	
  top2 . . . . . . . . . . . . .	L Near	 000000F7 _TEXT	
  writeFirstName . . . . . . . .	L Near	 00000105 _TEXT	
pass . . . . . . . . . . . . . .	P Near	 00000076 _TEXT	Length= 00000026 Public STDCALL
  tPass  . . . . . . . . . . . .	L Near	 00000081 _TEXT	
  next . . . . . . . . . . . . .	L Near	 00000097 _TEXT	
swap . . . . . . . . . . . . . .	P Near	 0000009C _TEXT	Length= 00000009 Public STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
array1 . . . . . . . . . . . . .	Word	 00000000 _DATA	
array2 . . . . . . . . . . . . .	Byte	 0000001E _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
colnum . . . . . . . . . . . . .	Byte	 0000003E _DATA	
comma  . . . . . . . . . . . . .	Byte	 00000040 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
firstName  . . . . . . . . . . .	Byte	 00000079 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
nameArray  . . . . . . . . . . .	Byte	 00000051 _DATA	
prompt1  . . . . . . . . . . . .	Byte	 00000026 _DATA	
prompt2  . . . . . . . . . . . .	Byte	 00000030 _DATA	
prompt3  . . . . . . . . . . . .	Byte	 00000042 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
rowSize  . . . . . . . . . . . .	Number	 0000000Ah   
rownum . . . . . . . . . . . . .	Byte	 0000003D _DATA	
showme . . . . . . . . . . . . .	Byte	 0000003F _DATA	
space  . . . . . . . . . . . . .	Byte	 00000041 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
