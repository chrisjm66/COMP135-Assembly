Microsoft (R) Macro Assembler Version 6.15.8803		    04/11/24 22:32:26
Week 11 Stuff / Test Prep				     Page 1 - 1


				TITLE Week 11 Stuff / Test Prep
				; Author: Chris Mangan
				; Date: 4-9-2024

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 = 00000028			stringLength = 40
 = 00000005			ithChar = 5
 00000000			.data
 00000000  00000028 [			fortyCharString BYTE stringLength DUP(0) ; very important to initialize with 0s in string since they will not print, unlike a ? which gets filled with garbage.
	    00
	   ]
 00000028 000C 000E 0017		numbers dw 12,14,23,21,24,21,7,8
	   0015 0018 0015
	   0007 0008
 00000038 43 75 72 72 65		sumIndicator BYTE "Current Sum:",0
	   6E 74 20 53 75
	   6D 3A 00
 00000045 45 6E 74 65 72		stringPrompt BYTE "Enter a string:",0
	   20 61 20 73 74
	   72 69 6E 67 3A
	   00
 00000055 00				sum byte 0
 00000056 00				nums BYTE 0 ; count of numbers
 00000057 00				letters BYTE 0
					
 00000058 43 68 72 69 73		myName BYTE "Chris",0
	   00
 0000005E 01				numSpaces BYTE 1
 00000000			.code

 00000000			main PROC
 00000000  E8 00000007			call nameLoop

					exit
 0000000C			main ENDP

				; ex 4
 0000000C			nameLoop PROC uses eax ecx edx
 0000000F  B9 0000000A			mov ecx, 10 ; output my name 10 times
 00000014  BA 00000058 R		mov edx, OFFSET myName
 00000019				outerLoop:
						; write name
 00000019  E8 00000000 E			call writeString
						
 0000001E  51					push ecx ; push ecx for use in inner loop
 0000001F  E8 00000000 E			call crlf ; create newline
 00000024  0F B6 0D				movzx ecx, BYTE PTR numSpaces 
	   0000005E R
 0000002B  B0 20				mov al, " "
 0000002D					innerLoop:
 0000002D  E8 00000000 E				call writeChar
 00000032  E2 F9				LOOP innerLoop
 00000034  FE 05 0000005E R			inc numSpaces
 0000003A  59					pop ecx ; pop to outerloop value
						
 0000003B  E2 DC			LOOP outerLoop
					ret
 00000041			nameLoop ENDP

				;ex 1
 00000041			sumProc PROC uses eax ecx edx esi
 00000045  B9 00000008			mov ecx, LENGTHOF numbers
 0000004A  BE 00000028 R		mov esi, OFFSET numbers
 0000004F  BA 00000038 R		mov edx, OFFSET sumIndicator
 00000054  66| B8 0000			mov ax, 0
 00000058				top:
 00000058  66| 8B 06				mov ax, [esi]
 0000005B  00 05 00000055 R			add sum, al ; because all numbers fit in a byte we can just add al.
 00000061  83 C6 02				add esi, TYPE numbers ; esi + 2
						
 00000064  0F BE 05				movsx eax, sum ; so the current sum displays
	   00000055 R
 0000006B  E8 00000000 E			call writeString
 00000070  E8 00000000 E			call crlf
 00000075  E8 00000000 E			call writeInt
 0000007A  E8 00000000 E			call crlf
 0000007F  E2 D7			LOOP top
					ret
 00000086			sumProc ENDP

				;ex 2
 00000086			fortyStringProc PROC uses eax ecx esi
					; Create a program that reads a 40-char string from the user and prints every fifth character.
					; print string
 00000089  BA 00000045 R		mov edx, OFFSET stringPrompt
 0000008E  E8 00000000 E		call writeString
 00000093  E8 00000000 E		call crlf
					
 00000098  BA 00000000 R		mov edx, OFFSET fortyCharString ; where to put string
 0000009D  B9 00000028			mov ecx, LENGTHOF fortyCharString ; how much space
 000000A2  E8 00000000 E		call readString
					
 000000A7  B9 00000009			mov ecx, ((LENGTHOF fortyCharString / ithChar) + 1) ; eax is the length of the string in readString
 000000AC  BE 00000000 R		mov esi, OFFSET fortyCharString
 000000B1				top:
						
 000000B1  8A 06				mov al, [esi] ; al since its a char
 000000B3  83 C6 05				add esi, ithChar ; since this a byte i can just add the exact amount of charts
 000000B6  E8 00000000 E			call writeChar
 000000BB  E2 F4			LOOP top
					
					ret
 000000C1			fortyStringProc ENDP

				; ex 3
 000000C1			stringIdentProc PROC uses eax ecx esi
 000000C4  B9 00000028			mov ecx, lengthOf fortyCharString
 000000C9  BE 00000000 R		mov esi, OFFSET fortyCharString
					
 000000CE				top:
 000000CE  8A 06				mov al, [esi] ; moves current char to al
						
 000000D0  3C 30				cmp al, "0" ; 48 ascii
 000000D2  7C 26				jl nextChar ; al < 0
						
 000000D4  3C 39				cmp al, "9"
 000000D6  7E 1A				jle addNumber ; 0 <= al <= 9
						
 000000D8  3C 41				cmp al, "A"
 000000DA  7C 1E				jl nextChar ; 9 < al < A
						
 000000DC  3C 5A				cmp al, "Z"
 000000DE  7E 0A				jle addLetter ; A <= al <= Z
						
 000000E0  3C 61				cmp al, "a"
 000000E2  7C 16				jl nextChar ; Z < al < a
						
 000000E4  3C 7A				cmp al, "z"
 000000E6  7E 02				jle addLetter ; a <= al <= z
 000000E8  7F 10				jg nextChar ; z < al
						
 000000EA				addLetter:
 000000EA  FE 05 00000057 R			inc letters
 000000F0  EB 08				jmp nextChar
						
 000000F2				addNumber:
 000000F2  FE 05 00000056 R			inc nums
 000000F8  EB 00				jmp nextChar
						
 000000FA				nextChar:
 000000FA  46					inc esi ; add 1 to esi which gets next char
						
 000000FB  E2 D1			LOOP top
					
 000000FD  0F B6 05			movzx eax, nums
	   00000056 R
 00000104  E8 00000000 E		call writeInt
					
 00000109  0F B6 05			movzx eax, letters
	   00000057 R
 00000110  E8 00000000 E		call writeInt
					
					ret
 00000119			stringIdentProc ENDP
				END main
Microsoft (R) Macro Assembler Version 6.15.8803		    04/11/24 22:32:26
Week 11 Stuff / Test Prep				     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000005F DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000119 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
fortyStringProc  . . . . . . . .	P Near	 00000086 _TEXT	Length= 0000003B Public STDCALL
  top  . . . . . . . . . . . . .	L Near	 000000B1 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000000C Public STDCALL
nameLoop . . . . . . . . . . . .	P Near	 0000000C _TEXT	Length= 00000035 Public STDCALL
  outerLoop  . . . . . . . . . .	L Near	 00000019 _TEXT	
  innerLoop  . . . . . . . . . .	L Near	 0000002D _TEXT	
stringIdentProc  . . . . . . . .	P Near	 000000C1 _TEXT	Length= 00000058 Public STDCALL
  top  . . . . . . . . . . . . .	L Near	 000000CE _TEXT	
  addLetter  . . . . . . . . . .	L Near	 000000EA _TEXT	
  addNumber  . . . . . . . . . .	L Near	 000000F2 _TEXT	
  nextChar . . . . . . . . . . .	L Near	 000000FA _TEXT	
sumProc  . . . . . . . . . . . .	P Near	 00000041 _TEXT	Length= 00000045 Public STDCALL
  top  . . . . . . . . . . . . .	L Near	 00000058 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fortyCharString  . . . . . . . .	Byte	 00000000 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
ithChar  . . . . . . . . . . . .	Number	 00000005h   
letters  . . . . . . . . . . . .	Byte	 00000057 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
myName . . . . . . . . . . . . .	Byte	 00000058 _DATA	
numSpaces  . . . . . . . . . . .	Byte	 0000005E _DATA	
numbers  . . . . . . . . . . . .	Word	 00000028 _DATA	
nums . . . . . . . . . . . . . .	Byte	 00000056 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
stringLength . . . . . . . . . .	Number	 00000028h   
stringPrompt . . . . . . . . . .	Byte	 00000045 _DATA	
sumIndicator . . . . . . . . . .	Byte	 00000038 _DATA	
sum  . . . . . . . . . . . . . .	Byte	 00000055 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
